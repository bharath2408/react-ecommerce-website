{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","padding","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","ListGroupItem","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","varian","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","hover","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8f895f02.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const  CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const  CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\n\r\nexport const  CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const  CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_REST'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_REST'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_REST'\r\n\r\n\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer} from './reducers/productReducers'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer, } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer} from './reducers/orderReducers'\r\n \r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin : userLoginReducer,\r\n    userRegister : userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n        \r\n    },\r\n    userLogin: {userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState , composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","\r\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL, } from '../constants/productConstants'\r\n\r\n    export const productListReducer = (state = { products: [] }, action) => {\r\n        switch (action.type) {\r\n            case PRODUCT_LIST_REQUEST:\r\n                return { loading: true, products: [] }\r\n    \r\n            case PRODUCT_LIST_SUCCESS:\r\n                return {\r\n                    loading: false,\r\n                    products: action.payload.products,\r\n                    page: action.payload.page,\r\n                    pages: action.payload.pages\r\n                }\r\n    \r\n            case PRODUCT_LIST_FAIL:\r\n                return { loading: false, error: action.payload }\r\n    \r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\nexport const productDetailsReducer = (state = {product:{reviews:[]}}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading:true, ...state}\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading:false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading:true,}\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading:false, success: true}\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading:true,}\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {loading:false, success: true, product: action.payload}\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productUpdateReducer = (state = {product:{}}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {loading:true,}\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {loading:false, success: true, product: action.payload}\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return {product:{}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return {loading:true,}\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return {loading:false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products:[]}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_TOP_REQUEST:\r\n            return {loading:true, products:[]}\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {loading:false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n       \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_CLEAR_ITEMS, } from '../constants/cartConstants'\r\n\r\n\r\n\r\n\r\nexport const cartReducer = (state={cartItems:[], shippingAddress:{}, }, action ) =>{\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product) \r\n\r\n            if(existItem){\r\n                return{\r\n                    state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems, item]\r\n                }\r\n            }\r\n            \r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems:state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return{\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT,\r\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET,\r\n    USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET,\r\n    USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET, } from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading:true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading:false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return { }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading:true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading:false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return { }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = {user : {}}, action) =>{\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading:true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading:false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return {user: {} }\r\n\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading:true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading:false, success: true ,userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {\r\n                \r\n            }\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userListReducer = (state = {users:[]}, action) =>{\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return {loading:true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return {loading:false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return {\r\n                users:[]\r\n            }\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return {loading:true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading:false, success:true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user: {}}, action) =>{\r\n    switch(action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading:true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading:false, success:true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return {loading:false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:    \r\n            return {user:{} }\r\n    \r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_CREATE_RESET,\r\n ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\r\n ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET,\r\n ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET,\r\n ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,\r\n ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET,} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state={}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_CREATE_RESET:\r\n            return{}        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderDetailsReducer = (state={loading: true, orderItems: [], shippingAddress: {}}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n             \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderPayReducer = (state={}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return{}\r\n             \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state={orders:[]}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return{\r\n                orders:[]\r\n            }\r\n             \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderListReducer = (state={orders:[]}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n","import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT,\r\nUSER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\r\nUSER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET ,\r\nUSER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET,\r\nUSER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET,\r\nUSER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\r\nUSER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL,} from '../constants/userConstants'\r\nimport axios from 'axios'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) =>{\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/login/',\r\n            {'username':email, 'password':password},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT,\r\n        \r\n    })\r\n    dispatch({\r\n        type: USER_DETAILS_RESET,\r\n    })\r\n    dispatch({\r\n        type: ORDER_LIST_MY_RESET,\r\n    })\r\n    dispatch({\r\n        type: USER_LIST_RESET,\r\n    })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) =>{\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/register/',\r\n            {'name':name, 'email':email, 'password':password},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            '/api/users/profile/update/',\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            '/api/users/',\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/users/delete/${id}`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n\r\n        })\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        if(keyword){\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n\r\n        }else{\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n            type='text'\r\n            name='q'\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            className ='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown, } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\n\r\nimport SearchBox from '../components/SearchBox'\r\n\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () =>{\r\n        dispatch(logout())\r\n\r\n    }\r\n\r\n    return (\r\n        <header>\r\n           <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect >\r\n               <Container>\r\n                   <LinkContainer to='/'>\r\n            <Navbar.Brand><i className=\"fas fa-store-alt\"></i> InShop</Navbar.Brand>\r\n            </LinkContainer>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <SearchBox />\r\n                <Nav className=\"ml-auto\">\r\n                {userInfo ? (\r\n                    <LinkContainer to='/cart'>   \r\n                    <Nav.Link><i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link>\r\n                    </LinkContainer>\r\n                ) :  (\r\n                    <LinkContainer to='/login'>   \r\n                    <Nav.Link><i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link>\r\n                    </LinkContainer>\r\n                )}\r\n                 \r\n                {userInfo ? (\r\n                    <NavDropdown title={userInfo.name} id='username'>\r\n                        <LinkContainer to='/profile'>\r\n                            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                        </LinkContainer>\r\n\r\n                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                ): (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link><i className=\"fas fa-user\"></i> Login</Nav.Link>\r\n                    </LinkContainer>\r\n                )}\r\n\r\n                {userInfo && userInfo.isAdmin &&(\r\n                    <NavDropdown title='Admin' id='adminmenu'>\r\n                    <LinkContainer to='/admin/userlist'>\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <LinkContainer to='/admin/productlist'>\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <LinkContainer to='/admin/orderlist'>\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                   \r\n                </NavDropdown>\r\n                )}\r\n\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; InShop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color}} className={\r\n                    value >= 1\r\n                    ? 'fas fa-star'\r\n                    : value >=0.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color}} className={\r\n                    value >= 2\r\n                    ? 'fas fa-star'\r\n                    : value >=1.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color}} className={\r\n                    value >= 3\r\n                    ? 'fas fa-star'\r\n                    : value >=2.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color}} className={\r\n                    value >= 4\r\n                    ? 'fas fa-star'\r\n                    : value >=3.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color}} className={\r\n                    value >= 5\r\n                    ? 'fas fa-star'\r\n                    : value >=4.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span> \r\n\r\n            \r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <div>\r\n            <Card className=\"my-3 p-3 rounded\">\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Img src={product.image} />\r\n                </Link>\r\n                <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} /> \r\n                    </div>\r\n\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    ₹{product.price}\r\n\r\n                </Card.Text>\r\n                </Card.Body>\r\n\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nfunction Loader() {\r\n    return (\r\n        <Spinner \r\n            animation = 'border' role='status' \r\n            style ={{\r\n                height:'100px',\r\n                width: '100px',\r\n                margin:'auto',\r\n                display:'block',\r\n                padding:'auto',\r\n                \r\n                \r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({page, pages, keyword='', isAdmin = false}) {\r\n\r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n\r\n    }\r\n   \r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) =>(\r\n                <LinkContainer \r\n                key={x + 1}\r\n                to={!isAdmin ?\r\n                    `/?keyword=${keyword}&page=${x + 1}`\r\n                    : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n        \r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\n\r\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL, } from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) =>{\r\n    try{\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const {data}  = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) =>{\r\n    try{\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n        const {data}  = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) =>{\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const {data}  = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n\r\n        })\r\n\r\n       }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n\r\n        })\r\n\r\n       }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n\r\n        })\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data})\r\n\r\n       }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n\r\n        })\r\n       \r\n\r\n       }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n\r\n    const dispatch =  useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const {error, loading, products} = productTopRated\r\n\r\n    useEffect(() => {\r\n       dispatch(listTopProducts())\r\n    }, [dispatch])\r\n    \r\n    return (loading ? <Loader/>\r\n    : error ?\r\n    <Message variant='danger'>{error}</Message>\r\n    : (\r\n        <Carousel pause='hover' className='bg-primary'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid/>\r\n                        <Carousel.Caption className='carousel.caption'>\r\n                            <h4>{product.name} (₹ {product.price})</h4>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const productList =  useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages} = productList\r\n\r\n    let keyword = history.location.search\r\n    \r\n    useEffect(()=>{\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n     \r\n  \r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            \r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader/>\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                : \r\n                <div>\r\n                <Row>\r\n                {products.map(product => (\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product product={product} />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n            <Paginate page={page} pages={pages} keyword={keyword}/>\r\n            </div>\r\n        }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form, ListGroupItem } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\nfunction ProductScreen({ match , history}) {\r\n    const[qty, setQty] = useState(1)\r\n    const[rating, setRating] = useState(0)\r\n    const[comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {loading:loadingProductReview, error:errorProductReview, success:successProductReview,} = productReviewCreate\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(successProductReview){\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n       \r\n\r\n    }, [dispatch, match, successProductReview])\r\n    \r\n\r\n    \r\n    const addToCartHandler = () =>{\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n                rating,\r\n                comment\r\n\r\n            }\r\n        ))\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ? \r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                :(<div>\r\n                    <Row>\r\n                    <Col md={6}>\r\n                        <Image src={product.image} alt={product.name} fluid/>\r\n                    </Col>\r\n                     <Col md={3}>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h3>{product.name}</h3>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Rating value={product.rating} text={`${product.numReviews} Reviews` } color={'#f8e825'}/>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Price: ₹{product.price}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Description: {product.description}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n                    </Col>\r\n                     <Col md={3}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>\r\n                                        Price:\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <strong>₹{product.price}</strong>\r\n                                        </Col>\r\n                                    </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                    Status:\r\n                                    </Col>\r\n                                    <Col>\r\n                                    {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {product.countInStock > 0 && (\r\n                                <ListGroupItem>\r\n                                    <Row>\r\n                                        <Col>Qty\r\n                                        </Col>\r\n                                        <Col xs='auto' className='my-1'>\r\n                                        <Form.Control as=\"select\" value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                         {   \r\n                                             \r\n                                             [...Array(product.countInStock).keys()].map((x) =>(\r\n                                                 <option key = {x + 1} value={x + 1}>\r\n                                                     {x + 1}\r\n                                                 </option>\r\n                                             ))\r\n                                         }\r\n\r\n                                        </Form.Control>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroupItem>\r\n\r\n                            )}\r\n                            <ListGroup.Item>\r\n                                <Button onClick={addToCartHandler} className='btn-block' disabled={product.countInStock === 0} type='button'>Add To Cart</Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <h4>Reviews</h4>\r\n                        {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                        <ListGroup variant='flush'>\r\n                            {product.reviews.map((review)=>(\r\n                                <ListGroup.Item key={review._id}>\r\n                                    <strong>{review.name}</strong>\r\n                                    <Rating value={review.rating} color='#f8e825'/>\r\n                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                    <p>{review.comment}</p>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n\r\n                            <ListGroup.Item>\r\n                                <h4>Write a review</h4>\r\n                                {loadingProductReview && <Loader/>}\r\n                                {successProductReview && <Message variant='success'>Reviews Submitted</Message>}\r\n                                {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                {userInfo ? (\r\n                                    <Form onSubmit={submitHandler}>\r\n                                        <Form.Group controlId='rating'>\r\n                                            <Form.Label>Rating</Form.Label>\r\n                                            <Form.Control\r\n                                                as='select'\r\n                                                value={rating}\r\n                                                onChange={(e) => setRating(e.target.value)}\r\n                                                \r\n                                            >\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Poor</option>\r\n                                                <option value='2'>2 - Fair</option>\r\n                                                <option value='3'>3 - Good</option>\r\n                                                <option value='4'>4 - Very Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId='comment'>\r\n                                            <Form.Label>Review</Form.Label>\r\n                                            <Form.Control\r\n                                                as='textarea'\r\n                                                row='5'\r\n                                                value={comment}\r\n                                                onChange={(e) => setComment(e.target.value)}\r\n                                            ></Form.Control>\r\n\r\n                                        </Form.Group>\r\n\r\n                                        <Button disabled={loadingProductReview}\r\n                                            type='submit'\r\n                                            variant='primary'\r\n                                        >\r\n                                            Submit\r\n                                        </Button>\r\n\r\n                                    </Form>\r\n                                ):(\r\n                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n                )\r\n\r\n            }\r\n\r\n\r\n            \r\n \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload:{\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n    \r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n\r\n}","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport  Message  from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nfunction CartScreen({match, location, history}) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n   \r\n\r\n    useEffect(() =>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    },[dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) =>{\r\n        dispatch(removeFromCart(id))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () =>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup varian='flush'>\r\n                        {cartItems.map(item =>(\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        ₹{item.price}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                    <Form.Control as=\"select\" value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                         {   \r\n                                             \r\n                                             [...Array(item.countInStock).keys()].map((x) =>(\r\n                                                 <option key = {x + 1} value={x + 1}>\r\n                                                     {x + 1}\r\n                                                 </option>\r\n                                             ))\r\n                                         }\r\n\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button type='button'\r\n                                        variant = 'light'\r\n                                        onClick={() => removeFromCartHandler(item.product)}\r\n                                        > \r\n                                        <i className='fas fa-trash'></i>\r\n\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                        \r\n\r\n                    </ListGroup>\r\n\r\n                    \r\n                )}\r\n                \r\n                   \r\n                <Link to='/' className='btn btn-light my-3'>Add More</Link>\r\n                \r\n                \r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ₹{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n\r\n                            </Button>\r\n                        </ListGroup>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React, { Children } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n    \r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                {children}\r\n                </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\nfunction LoginScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n   useEffect(() => {\r\n       if (userInfo){\r\n          history.push(redirect)\r\n       }\r\n   },[history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n\r\n                    ></Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n\r\n                </Form.Group>\r\n               \r\n                <Button type='submit' variant='primary' >\r\n                    Sign In\r\n\r\n                </Button>\r\n                \r\n           </Form>\r\n           <Row className='py-3'>\r\n               <Col>\r\n               New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n               </Col>\r\n\r\n           </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\n\r\nfunction RegisterScreen({location, history}) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n   useEffect(() => {\r\n       if (userInfo){\r\n          history.push(redirect)\r\n       }\r\n   },[history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n\r\n        if(password != confirmPassword){\r\n            setMessage('Password is do not match')\r\n        }else{\r\n            dispatch(register(name, email, password))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Register Here</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId='passwordConfirm'>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    \r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n               <Col>\r\n               Have an account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Sign In</Link>\r\n               </Col>\r\n\r\n           </Row>\r\n            \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table, Image } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const {loading:loadingOrders, error: errorOrders, orders} = orderListMy\r\n\r\n   useEffect(() => {\r\n       if (!userInfo){\r\n          history.push('/login')\r\n       }else{\r\n           if(!user || !user.name || success || userInfo._id !== user._id){\r\n               dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n               dispatch(getUserDetails('profile'))\r\n               dispatch(listMyOrders())\r\n           }else{\r\n               setName(user.name)\r\n               setEmail(user.email)\r\n           }\r\n       }\r\n   },[dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n\r\n        if(password != confirmPassword){\r\n            setMessage('Password is do not match')\r\n        }else{\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            \r\n            \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control\r\n                        \r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId='passwordConfirm'>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    \r\n                    <Form.Control\r\n                        \r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n\r\n                </Button>\r\n            </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? ( \r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive hover className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>₹{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import  axios  from 'axios'\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\r\n ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_RESET, ORDER_PAY_FAIL,\r\n ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_RESET, ORDER_LIST_MY_FAIL,\r\n ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,\r\n ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_RESET, ORDER_DELIVER_FAIL,} from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/orders/add/',\r\n            order,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       }catch(error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n\r\n        })\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction CheckoutSteps({step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className='justify-content-center mb=4'>\r\n            <Nav.Item>\r\n            {step1 ?(\r\n                \r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                \r\n            ) : (\r\n                <Nav.Link disabled>Login</Nav.Link>\r\n            )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n            {step2 ?(\r\n                \r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                \r\n            ) : (\r\n                <Nav.Link disabled>Shipping</Nav.Link>\r\n            )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n            {step3 ?(\r\n                \r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                \r\n            ) : (\r\n                <Nav.Link disabled>Payment</Nav.Link>\r\n            )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n            {step4 ?(\r\n                \r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                \r\n            ) : (\r\n                <Nav.Link disabled>Place Order</Nav.Link>\r\n            )}\r\n            </Nav.Item>\r\n           \r\n            \r\n            \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Form, Button, Col, Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address){\r\n        history.push('/shipping')\r\n        }\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        \r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                    <Form.Check \r\n                        type='radio'\r\n                        label='PayPal or Credit Card'\r\n                        id='paypal'\r\n                        name='paymentMethod'\r\n                        checked\r\n                        onChange = {(e) => setPaymentMethod(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n            \r\n        </FormContainer>\r\n        \r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card, } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\n\r\n\r\nfunction PlaceOrderScreen({history}) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, error, success} = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 599 ? 0 : 49).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if (!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({type: ORDER_CREATE_RESET})\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () =>{\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                                {' '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'> \r\n                                Your cart is empty\r\n                            </Message> :(\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}><Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ₹ {item.price} = ₹ {(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>₹ {cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>₹ {cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>₹ {cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>₹ {cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                    \r\n                                >\r\n                                    Place Your Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button, } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\n\r\nfunction OrderScreen({ match, history}) {\r\n\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const[sdkReady, setSdkReady]  = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {order, error, loading} = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading : loadingPay, success: successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading : loadingDeliver, success: successDeliver} = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n        \r\n    //Ae0yab4RmJASV5xG4OX6wfgM8F5IVM7qPLYAmligQkZXECqioGXZ6Nf3QpJnre6qhxNuxhdvSBSBiHhy\r\n\r\n    const addPayPalScript = () =>{\r\n        const script  = document.createElement('script')\r\n        script.type ='text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AS0sc4qgTcPFmnvLki_9Kfg2fBrcvxD0Wh-VyIvuJ7fd4oW3FjITJLpKdX81aXXa8HnNfNt0KGN9oicY'\r\n        script.async = true\r\n        script.onload = () =>{\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n        if(!order || successPay || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n\r\n        }\r\n        \r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) =>{\r\n        dispatch(payOrder(orderId, paymentResult))\r\n\r\n    }\r\n    const deliverHandler = () =>{\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n   \r\n    return loading ? (\r\n        <Loader/>\r\n    ) : error  ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                                <p><strong>Name: </strong> {order.user.name}</p>\r\n                                <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}> {order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                                {' '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'> \r\n                                Your Order is empty\r\n                            </Message> :(\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}><Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ₹ {item.price} = ₹ {(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>₹ {order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>₹ {order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>₹ {order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>₹ {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader/>}\r\n\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton \r\n                                         amount={order.totalPrice}\r\n                                         onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                               \r\n                            )}  \r\n                        </ListGroup>\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                type='button'\r\n                                className='btn btn-block'\r\n                                onClick={deliverHandler}\r\n                                >\r\n                                    Mark as deliver\r\n                                </Button>\r\n\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Table, Button,} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser} from '../actions/userActions'\r\n\r\nfunction UserListScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success: successDelete} = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n\r\n       \r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n            \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n            ? (<Loader/>)\r\n            : error \r\n            ? (<Message variant='danger'>{error}</Message>) :(\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>ID</th>\r\n                        <th>NAME</th>\r\n                        <th>EMAIL</th>\r\n                        <th>ADMIN</th>\r\n                        <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user =>(\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.isAdmin ? (\r\n                                    <i className='fas fa-check' style={{color:'green'}}></i>\r\n                                ):(\r\n                                    <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                )}</td>\r\n\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                \r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\n\r\n\r\nfunction UserEditScreen({match, history}) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n   \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const {error: errorUpdate, loading: loadingUpdate, success: successUpdate} = userUpdate\r\n\r\n   useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if(!user.name || user._id !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n           }else{\r\n               setName(user.name)\r\n               setEmail(user.email)\r\n               setIsAdmin(user.isAdmin)\r\n           }\r\n        }\r\n\r\n       \r\n      \r\n   },[user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id: user._id, name, email, isAdmin}))\r\n       \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n            Go Back\r\n            </Link>\r\n\r\n        <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader/>}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n           {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :(\r\n               <Form onSubmit={submitHandler}>\r\n               <Form.Group controlId='name'>\r\n                   <Form.Label>Name</Form.Label>\r\n                   <Form.Control\r\n                       type='name'\r\n                       placeholder='Enter Name'\r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n               <Form.Group controlId='email'>\r\n                   <Form.Label>Email Address</Form.Label>\r\n                   <Form.Control\r\n                       type='email'\r\n                       placeholder='Enter Email'\r\n                       value={email}\r\n                       onChange={(e) => setEmail(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n               <Form.Group controlId='isadmin'>\r\n                   <Form.Label>Password</Form.Label>\r\n                   <Form.Check\r\n\r\n                       type='checkbox'\r\n                       label='Is Admin'\r\n                       checked={isAdmin}\r\n                       onChange={(e) => setIsAdmin(e.target.checked)}\r\n                   ></Form.Check>\r\n\r\n               </Form.Group>\r\n               \r\n               <Button type='submit' variant='primary'>\r\n                  Update\r\n\r\n               </Button>\r\n           </Form>\r\n           )}\r\n            \r\n            \r\n            \r\n        </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({history, match}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, pages, page} = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading: loadingDelete, error:errorDelete, success: successDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading: loadingCreate, error:errorCreate, success: successCreate, product: createdProduct} = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n\r\n    let keyword = history.location.search\r\n  \r\n    useEffect(() => {\r\n        dispatch({type: PRODUCT_CREATE_RESET,})\r\n        if(!userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n\r\n        if(successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else{\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n       \r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')){\r\n          dispatch(deleteProduct(id))\r\n        }\r\n            \r\n    }\r\n    const createProductHandler =() =>{\r\n        dispatch(createProduct())\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader/>}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n            ? (<Loader/>)\r\n            : error \r\n            ? (<Message variant='danger'>{error}</Message>) :(\r\n                <div>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>ID</th>\r\n                        <th>NAME</th>\r\n                        <th>PRICE</th>\r\n                        <th>CATEGORY</th>\r\n                        <th>BRAND</th>\r\n                        <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map(product =>(\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>₹{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                \r\n                </Table>\r\n                <Paginate page={page} pages={pages} isAdmin={true}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\nfunction ProductEditScreen({match, history}) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n   \r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {error, loading, product} = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const {error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n   useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type: PRODUCT_UPDATE_RESET,})\r\n            history.push('/admin/productlist')\r\n        }else{\r\n            if(!product.name || product._id !== Number(productId)){\r\n                dispatch(listProductDetails(productId))\r\n            }else{\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n               \r\n            }\r\n        }\r\n        \r\n       \r\n        \r\n    },[dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n       dispatch(updateProduct({\r\n           _id:productId,\r\n           name,\r\n           price,\r\n           image,\r\n           brand,\r\n           category,\r\n           countInStock,\r\n           description,\r\n       }))\r\n       \r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n            Go Back\r\n            </Link>\r\n\r\n        <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader/>}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n           {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :(\r\n               <Form onSubmit={submitHandler}>\r\n               <Form.Group controlId='name'>\r\n                   <Form.Label>Name</Form.Label>\r\n                   <Form.Control\r\n                       type='name'\r\n                       placeholder='Enter Name'\r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)}\r\n                   ></Form.Control>\r\n                   </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                   <Form.Label>Price</Form.Label>\r\n                   <Form.Control\r\n                       type='number'\r\n                       placeholder='Enter price'\r\n                       value={price}\r\n                       onChange={(e) => setPrice(e.target.value)}\r\n                   ></Form.Control>\r\n                   </Form.Group>\r\n\r\n                <Form.Group controlId='image'>\r\n                   <Form.Label>Product Image</Form.Label>\r\n                   <Form.Control\r\n                       type='text'\r\n                       placeholder='Enter image'\r\n                       value={image}\r\n                       onChange={(e) => setImage(e.target.value)}\r\n                   >\r\n                   </Form.Control>\r\n                   <Form.File\r\n                    id='image-file'\r\n                    label='Choose File'\r\n                    custom\r\n                    onChange={uploadFileHandler}\r\n                   ></Form.File>\r\n                   {uploading && <Loader/>}\r\n                   </Form.Group>\r\n\r\n                <Form.Group controlId='brand'>\r\n                   <Form.Label>Brand</Form.Label>\r\n                   <Form.Control\r\n                       type='text'\r\n                       placeholder='Enter brand'\r\n                       value={brand}\r\n                       onChange={(e) => setBrand(e.target.value)}\r\n                   ></Form.Control>\r\n                   \r\n                   </Form.Group>\r\n                \r\n                <Form.Group controlId='countinstock'>\r\n                   <Form.Label>Stock</Form.Label>\r\n                   <Form.Control\r\n                       type='number'\r\n                       placeholder='Enter stock'\r\n                       value={countInStock}\r\n                       onChange={(e) => setCountInStock(e.target.value)}\r\n                   ></Form.Control>\r\n                   </Form.Group>\r\n\r\n                   <Form.Group controlId='category'>\r\n                   <Form.Label>Category</Form.Label>\r\n                   <Form.Control\r\n                       type='text'\r\n                       placeholder='Enter Category'\r\n                       value={category}\r\n                       onChange={(e) => setCategory(e.target.value)}\r\n                   ></Form.Control>\r\n                   </Form.Group>\r\n\r\n                   <Form.Group controlId='description'>\r\n                   <Form.Label>Description</Form.Label>\r\n                   <Form.Control\r\n                       type='text'\r\n                       placeholder='Enter Description'\r\n                       value={description}\r\n                       onChange={(e) => setDescription(e.target.value)}\r\n                   ></Form.Control>\r\n                   </Form.Group>\r\n            \r\n               \r\n               \r\n               <Button type='submit' variant='primary'>\r\n                  Update\r\n\r\n               </Button>\r\n           </Form>\r\n           )}\r\n            \r\n            \r\n            \r\n        </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Table, Button,} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders} from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading, error, orders} = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n\r\n       \r\n    }, [dispatch, history, userInfo])\r\n\r\n \r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n            ? (<Loader/>)\r\n            : error \r\n            ? (<Message variant='danger'>{error}</Message>) :(\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>ID</th>\r\n                        <th>USER</th>\r\n                        <th>DATE</th>\r\n                        <th>TOTAL</th>\r\n                        <th>PAID</th>\r\n                        <th>DELIVERD</th>\r\n                        <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order =>(\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>₹ {order.totalPrice}</td>\r\n                                <td>{order.isPaid ? (\r\n                                   order.paidAt.substring(0, 10)\r\n                                ):(\r\n                                    <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                )}</td>\r\n\r\n                                <td>{order.isDelivered ? (\r\n                                   order.deliveredAt.substring(0, 10)\r\n                                ):(\r\n                                    <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                )}</td>\r\n\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='primary' className='btn-sm'>\r\n                                        Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    \r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                \r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from  './screens/HomeScreen'\nimport ProductScreen from  './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n         <Route path='/' component={HomeScreen} exact />\n         <Route path='/login' component={LoginScreen} />\n         <Route path='/register' component={RegisterScreen} />\n         <Route path='/profile' component={ProfileScreen} />\n         <Route path='/shipping' component={ShippingScreen} />\n         <Route path='/payment' component={PaymentScreen} />\n         <Route path='/placeorder' component={PlaceOrderScreen} />\n         <Route path='/order/:id' component={OrderScreen} />\n         <Route path='/product/:id' component={ProductScreen} />\n         <Route path='/cart/:id?' component={CartScreen} />\n\n\n         <Route path='/admin/userlist' component={UserListScreen} />\n         <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n         <Route path='/admin/productlist' component={ProductListScreen} />\n         <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n         <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>\n      </main>\n     <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}